import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "../utils/api";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });
  const movies = api.movies.getAll.useQuery();

  return (
    <>
      <Head>
        <title>Media Tracker</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            <span className="text-[hsl(280,100%,70%)]">Media</span> Tracker
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="/movies"
            >
              <h3 className="text-center text-2xl font-bold">Movies</h3>
            </Link>
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="/shows"
            >
              <h3 className="text-center text-2xl font-bold">TV Shows</h3>
            </Link>
          </div>
          <div className="grid grid-cols-1">
            <div className="grid grid-cols-3 gap-10 text-white">
              {movies &&
                movies.isSuccess &&
                movies.data.map((movie) => (
                  <div key={movie.id}>
                    <div className="card w-48 bg-base-100 shadow-xl">
                      <figure>
                        <Image
                          src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}
                          alt={movie.title}
                          width="200"
                          height="300"
                        />
                      </figure>
                      <div className="card-body">
                        <h2 className="card-title">{movie.title}</h2>
                        {!!movie.genres.length &&
                          movie.genres.map((genre) => (
                            <div
                              key={genre}
                              className="rounded-full bg-violet-500 text-center"
                            >
                              {genre}
                            </div>
                          ))}
                        <div className="card-actions justify-end">
                          <Link
                            href={`/m/${movie.id}`}
                            className="btn-primary btn"
                          >
                            View{" "}
                          </Link>
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
            </div>
            <Link
              className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
              href="/add"
            >
              +
            </Link>
          </div>
          <div className="flex flex-col items-center gap-2">
            <AuthShowcase />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
